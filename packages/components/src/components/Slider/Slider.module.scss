@use "@/styles/mixins/focus";

.slider {
  display: flex;
  flex-direction: column;
  width: 100%;
  row-gap: var(--slider--spacing-y);
  --button-size: calc(var(--line-height--m) + var(--button--padding-y) * 2);

  .text {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    column-gap: var(--slider--spacing-x);
    padding: 0 calc(var(--button-size) + var(--slider--spacing-x));
    min-height: calc(var(--button-size) - var(--slider--spacing-y) / 2);

    .value {
      font-weight: var(--slider--value-font-weight);
    }
  }

  .track {
    grid-area: track;
    position: relative;
    height: var(--slider--handle-size);

    &:before {
      content: "";
      display: block;
      position: absolute;
      background-color: var(--slider--track-color--default);
      height: var(--slider--border-width);
      width: 100%;
      top: 50%;
      transform: translateY(-50%);
      border-radius: var(--slider--corner-radius);
    }
  }

  .fill {
    position: absolute;
    height: var(--slider--border-width);
    background-color: var(--slider--color--default);
    top: calc(50% - var(--slider--border-width) / 2);
    border-radius: var(--slider--corner-radius);
  }

  .initialMarker {
    position: absolute;
    height: var(--slider--initial-marker-height);
    width: var(--slider--border-width);
    background-color: var(--slider--color--default);
    top: calc(50% - var(--slider--initial-marker-height) / 2);
    border-radius: var(--slider--corner-radius);
  }

  .handle {
    width: var(--slider--handle-size);
    height: var(--slider--handle-size);
    border-radius: var(--slider--handle-corner-radius);
    background-color: var(--slider--handle-fill-color);
    border-width: var(--slider--border-width);
    border-style: var(--slider--border-style);
    border-color: var(--slider--color--default);
    forced-color-adjust: none;
    top: 50%;
    transition-property: background-color;
    transition-duration: var(--transition--duration--default);

    &[data-dragging],
    &[data-focus-visible] {
      background-color: var(--slider--color--default);
    }

    &[data-focus-visible] {
      @include focus.focus;

      & {
        outline-offset: var(--size-px--xs);
      }
    }
  }

  .increment,
  .decrement {
    position: absolute;
    top: calc((var(--slider--spacing-y) / 2 + var(--button-size)) * -1);
  }

  .increment {
    right: 0;
  }

  .decrement {
    left: 0;
  }

  &.disabled {
    .track {
      &:before {
        background-color: var(--slider--track-color--disabled);
      }
    }

    .fill {
      background-color: var(--slider--color--disabled);
    }

    .handle {
      border-color: var(--slider--color--disabled);
    }

    .text {
      color: var(--text--color--disabled);
    }
  }
}
