@use "@/styles/mixins/focus";

.tabTitle {
  padding-inline: var(--tab--padding-x);
  padding-block: var(--tab--padding-y);
  background-color: var(--tab--background-color--default);
  color: var(--tab--color--default);
  cursor: default;
  white-space: nowrap;
  transition-property: color, background-color;
  transition-duration: var(--transition--duration--default);

  @include focus.focus;
  outline-offset: calc(var(--size-px--xs) * -1);

  &:hover {
    background-color: var(--tab--background-color--hover);
  }

  &[data-pressed] {
    background-color: var(--tab--background-color--pressed);
  }

  &[aria-disabled="true"] {
    color: var(--tab--disabled-color);
    background-color: var(--tab--disabled-background-color);
  }
}

// selected tab
.tabTitle[data-selected],

/**
  The following selectors setting the selected style at the first (not disabled) tab,
  if the selected state is undetermined at first render (no tab has [data-selected]).
  This prevents the initial CSS transition, which looks like flickering.
*/

// first tab disabled
:global(.flow--tabs--tab-list):not(:has(.tabTitle[data-selected])):has(.tabTitle[aria-disabled])
.tabTitle[aria-disabled]:first-of-type + .tabTitle,

// other/no tab disabled
:global(.flow--tabs--tab-list):not(:has(.tabTitle[data-selected]))
.tabTitle:first-of-type:not([aria-disabled]) {
  background-color: var(--tab--background-color--selected);
  color: var(--tab--color--selected);
  font-weight: var(--tab--font-weight--selected);
}
