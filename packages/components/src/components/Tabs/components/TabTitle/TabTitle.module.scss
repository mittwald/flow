@use "../../../../styles/mixins/focus.scss";

.tabTitle {
  padding: var(--tabs--padding);
  background-color: var(--tabs--background-color--default);
  color: var(--tabs--color);
  cursor: default;
  white-space: nowrap;
  transition-property: color, background-color;
  transition-duration: var(--transition--duration--default);
  display: flex;
  align-items: center;
  column-gap: var(--tabs--spacing);

  @include focus.focus;

  & {
    outline-offset: calc(var(--size-px--xs) * -1);
  }

  &:hover {
    background-color: var(--tabs--background-color--hover);
  }

  &[data-pressed] {
    background-color: var(--tabs--background-color--pressed);
  }

  &[aria-disabled="true"] {
    color: var(--tabs--disabled-color);
    background-color: var(--tabs--background-color--default);
  }

  .text {
    display: flex;
    align-items: center;
    column-gap: var(--tabs--spacing);
  }
}

// selected tab
.tabTitle[data-selected],
  /**
    The following selectors setting the selected style at the first (not disabled) tab,
    if the selected state is undetermined at first render (no tab has [data-selected]).
    This prevents the initial CSS transition, which looks like flickering.
  */

  // first tab disabled
:global(.flow--tabs--tab-list):not(:has(.tabTitle[data-selected])):has(.tabTitle[aria-disabled]) .tabTitle[aria-disabled]:first-of-type + .tabTitle,

  // other/no tab disabled
:global(.flow--tabs--tab-list):not(:has(.tabTitle[data-selected])) .tabTitle:first-of-type:not([aria-disabled]) {
  background-color: var(--tabs--background-color--selected);
  font-weight: var(--tabs--font-weight--selected);
}

.menuItem {
  > span {
    display: flex;
    align-items: center;
    justify-content: space-between;
    column-gap: var(--tabs--spacing);
    flex-grow: 1;
  }
}
