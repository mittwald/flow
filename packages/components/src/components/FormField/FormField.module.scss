@import "@/styles";

.formField {
  display: flex;
  flex-direction: column;
}

/* Elements */
.label {
  order: 1;
  margin-bottom: var(--form-control--label-to-control-spacing);
}

.fieldError,
.customFieldError,
.fieldDescription {
  order: 3;
  margin-top: var(--form-control--control-to-info-spacing);
}

/* With field error */
.formField:has(.fieldError) {
  .fieldDescription {
    display: none;
  }
}

/* With custom field error */
.formField:has(.customFieldError) .fieldError {
  display: none;
}

/* State colors */
.formField {
  /* Default */
  --form-field-control--background-color: var(
    --form-control--background-color--default
  );
  --form-field-control--border-color: var(
    --form-control--background-color--default
  );
  --form-field-control--color: inherit;

  /* Hover */
  &:hover {
    --form-field-control--background-color: var(
      --form-control--background-color--hover
    );
    --form-field-control--border-color: var(
      --form-control--border-color--hover
    );
    --form-field-control--color: inherit;
  }

  /* Invalid */
  &[data-invalid] {
    --form-field-control--background-color: var(
      --form-control--background-color--invalid
    );
    --form-field-control--border-color: var(
      --form-control--border-color--invalid
    );
    --form-field-control--color: inherit;
  }

  /* Focused */
  &[data-invalid]:focus-within,
  &:focus-within {
    --form-field-control--background-color: var(
      --form-control--background-color--focused
    );
    --form-field-control--border-color: var(
      --form-control--border-color--focused
    );
    --form-field-control--color: inherit;
  }

  /* Disabled */
  &[data-disabled] {
    --form-field-control--background-color: var(
      --form-control--background-color--disabled
    );
    --form-field-control--border-color: var(
      --form-control--border-color--disabled
    );
    --form-field-control--color: var(--form-control--color--disabled);
  }
}
