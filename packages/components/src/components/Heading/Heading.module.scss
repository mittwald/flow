.heading {
  color: var(--heading--color);
  font-size: var(--font-size);
  font-weight: var(--heading--font-weight);
  --heading-line-height: calc(var(--font-size) * var(--line-height--default));

  &.dark {
    color: var(--heading--color-dark);
  }

  &.light {
    color: var(--heading--color-light);
  }

  .headingText {
    .icon {
      height: var(--heading-line-height);
      width: var(--heading-line-height);
      vertical-align: bottom;
      display: inline-block;
      margin-inline-end: var(--heading--icon-to-text-spacing);
    }

    &:not(:last-child):has(+ .headingContent:not(:empty)) {
      margin-inline-end: var(--heading--icon-to-text-spacing);
    }
  }

  .headingContent {
    vertical-align: bottom;
    display: inline-flex;
    min-height: var(--heading-line-height);
    align-items: center;
    gap: var(--heading--icon-to-text-spacing);
    flex-wrap: wrap;

    &:empty {
      display: none;
    }
  }

  &:where(h1) {
    --font-size: var(--font-size-heading--xl);
  }

  &:where(h2) {
    --font-size: var(--font-size-heading--m);
  }

  &:where(h3) {
    --font-size: var(--font-size-heading--s);
  }

  &:where(h4),
  &:where(h5),
  &:where(h6) {
    --font-size: var(--font-size-heading--xs);
  }

  @mixin size($size) {
    &.#{$size} {
      --font-size: var(--font-size-heading--#{$size});
    }
  }

  @include size("xs");
  @include size("s");
  @include size("m");
  @include size("l");
  @include size("xl");
  @include size("xxl");

  &:where(.wrap-wrap) {
    text-wrap: wrap;
  }
  &:where(.wrap-balance) {
    text-wrap: balance;
  }
}

@media (max-width: 550px) {
  .heading:where(h1) {
    --font-size: var(--font-size-heading--l);
  }
}
