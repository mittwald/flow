@use "../../styles/mixins/formControl";
@use "../../styles/mixins/containerBreakpointSizes";

.radioGroup {
  order: 2;
  display: flex;
  flex-direction: column;
  row-gap: var(--radio-group--radio-to-radio-spacing);
}

.segmentedGroup {
  order: 2;
  container-type: inline-size;
  isolation: isolate;

  .segments {
    display: flex;
    flex-wrap: nowrap;
    order: 2;
  }

  .segment {
    flex: 1;
    display: grid;
    column-gap: var(--segment--text-to-icon-spacing);
    grid-template-areas: "label checkmark";
    grid-template-columns: 1fr auto;
    margin-right: -1px; /* Collapse borders */

    @include formControl.formControl();

    & {
      border-radius: 0;
    }

    &:first-of-type {
      border-start-start-radius: var(--form-control--corner-radius);
      border-end-start-radius: var(--form-control--corner-radius);
    }

    &:last-of-type {
      border-start-end-radius: var(--form-control--corner-radius);
      border-end-end-radius: var(--form-control--corner-radius);
      margin: 0;
    }

    .checkmark {
      grid-area: checkmark;
      display: none;
    }

    &[data-selected] {
      z-index: 1;

      .checkmark {
        display: block;
      }
    }
  }
}

.radioGroupContainer {
  @include containerBreakpointSizes.containerBreakpointSizes(
    250,
    400,
    550,
    700,
    850
  ) {
    .segmentedGroup {
      .segments {
        flex-direction: column;
      }

      .segment {
        margin-bottom: -1px; /* Collapse borders */
        margin-right: 0;

        &:first-of-type {
          border-start-start-radius: var(--form-control--corner-radius);
          border-start-end-radius: var(--form-control--corner-radius);
          border-end-start-radius: 0;
        }

        &:last-of-type {
          border-end-end-radius: var(--form-control--corner-radius);
          border-end-start-radius: var(--form-control--corner-radius);
          border-start-end-radius: 0;
          margin: 0;
        }
      }
    }
  }
}
