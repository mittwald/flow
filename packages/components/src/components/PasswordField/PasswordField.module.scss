@use "@/styles/mixins/formControl";

.passwordField {
}

.inputGroup {
  position: relative;
  display: flex;
  flex-direction: row;
  min-width: fit-content;
  order: 2;

  @include formControl.formControl;

  padding-block: 0
    calc(var(--form-control--padding-y) - var(--form-control--border-width));
  padding-right: 0;

  transition: padding ease-in-out 150ms;

  &:has(.complexityHide) {
    padding-bottom: 0;
  }

  .input {
    flex-grow: 1;

    background-color: unset;
    border-start-end-radius: 0;
    border-end-end-radius: 0;
    border-width: 0;

    /* Hovered */
    &:hover {
      background-color: unset;
    }

    /* Invalid */
    &[data-invalid] {
      border-color: unset;
      background-color: unset;
    }

    /* Focused */
    &:focus-within {
      border-color: unset;
      background-color: unset;
    }
    &:focus-visible,
    &:focus {
      outline: unset;
    }
  }

  .buttons {
    display: flex;
    border-left: 0;
    border-inline-start: none;
    border-start-start-radius: 0;
    border-end-start-radius: 0;
  }

  .complexityContainer {
    box-shadow: 0 -1px 0 gray;
    width: 100%;
    position: absolute;
    bottom: 0;
    left: 0;
    height: 6px;

    transition: height ease-in-out 150ms;

    &.complexityHide {
      height: 0;
      overflow: hidden;
    }
  }

  .complexity {
    border-radius: calc(var(--form-control--corner-radius) - 1px);
    border-top-left-radius: 0;
    border-top-right-radius: 0;

    position: absolute;
    bottom: 0;
    left: 0;
    height: 6px;

    transition: all ease-in-out 80ms;

    &.complexity-background-status-unsatisfied {
      background-color: red;
    }
    &.complexity-background-status-fulfilled {
      background-color: yellow;
    }
    &.complexity-background-status-accomplished {
      background-color: green;
    }

    &.complexityUnsatisfied {
      border-bottom-right-radius: 0;
    }
  }
}
