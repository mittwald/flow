@use "@/styles/mixins/formControl";

.passwordField {
}

.inputGroup {
  position: relative;
  display: flex;
  flex-direction: row;
  min-width: fit-content;
  order: 2;

  @include formControl.formControl;

  padding-block-start: calc(
    var(--form-control--padding-y) - var(--form-control--border-width)
  );
  padding-inline-end: 0;
  padding-top: 0;

  transition: padding ease-in-out 150ms;

  &:has(.complexityContainerHide) {
    padding-bottom: 0;
  }

  /* Invalid */
  &:has([data-invalid]) {
    &:not(:focus-within) {
      border-color: var(--form-control--border-color--invalid);
      background-color: var(--form-control--background-color--invalid);
    }
  }

  /* Selected */
  &[data-selected] {
    color: var(--form-control--content-color--selected);
    border-color: var(--form-control--border-color--selected);
    background-color: var(--form-control--background-color--selected);
  }

  .input {
    flex-grow: 1;

    background-color: unset;
    border-start-end-radius: 0;
    border-end-end-radius: 0;
    border-width: 0;

    /* Hovered */
    &:hover {
      background-color: unset;
    }

    /* Focused */
    &:focus-within {
      border-color: unset;
      background-color: unset;
    }
    &:focus-visible,
    &:focus {
      outline: unset;
    }
  }

  .buttonContainer {
    display: flex;

    & .button {
      flex-shrink: 0;
      outline-offset: -2px;
    }
  }

  .complexityContainer {
    box-shadow: 0 -1px 0 var(--progress-bar--bar-border-color);
    width: 100%;
    position: absolute;
    bottom: 0;
    left: 0;
    height: 6px;
    transition: height ease-in-out 150ms;
    overflow: hidden;

    &.complexityContainerHide {
      height: 0;
      overflow: hidden;
    }

    & .complexity {
      position: relative;
      display: block;
      height: 100%;

      border-radius: calc(var(--form-control--corner-radius) - 1px);
      border-top-left-radius: 0;
      border-top-right-radius: 0;

      &.complexityRunning {
        border-bottom-right-radius: 0;
      }

      transition: all ease-in-out 80ms;

      &.complexity-background-status-danger {
        background-color: var(--progress-bar--danger-fill-background-color);
      }

      &.complexity-background-status-success {
        background-color: var(--progress-bar--success-fill-background-color);
      }

      &.complexity-background-status-warning {
        background-color: var(--progress-bar--warning-fill-background-color);
      }

      &.loading {
        &::after {
          position: absolute;
          top: 0;
          right: 0;
          bottom: 0;
          left: 0;
          transform: translateX(-100%);
          background-image: linear-gradient(
            90deg,
            rgba(255, 255, 255, 0) 0,
            rgba(255, 255, 255, 0.8) 20%,
            rgba(255, 255, 255, 0) 40%
          );
          animation: shimmer 1s infinite;
          content: "";
        }
      }
    }
  }
}

@keyframes shimmer {
  100% {
    transform: translateX(100%);
  }
}
