import { createFlowRemoteComponentRenderer } from "@/lib/createFlowRemoteComponentRenderer";
import { elementFactory } from "@/lib/elementFactory";
import { createRemoteComponentRenderer } from "@mittwald/remote-dom-react/host";
import autoGenerated from "./auto-generated";
import { Form, SlotRootWrapper } from "@/components/";
import { NotificationRenderController } from "@/components/NotificationRenderController";

const htmlComponentsMap = {
  svg: createRemoteComponentRenderer(elementFactory("svg")),
  circle: createRemoteComponentRenderer(elementFactory("circle")),
  g: createRemoteComponentRenderer(elementFactory("g")),
  path: createRemoteComponentRenderer(elementFactory("path")),
  strong: createRemoteComponentRenderer(elementFactory("strong")),
  s: createRemoteComponentRenderer(elementFactory("s")),
  ul: createRemoteComponentRenderer(elementFactory("ul")),
  ol: createRemoteComponentRenderer(elementFactory("ol")),
  li: createRemoteComponentRenderer(elementFactory("li")),
  small: createRemoteComponentRenderer(elementFactory("small")),
  br: createRemoteComponentRenderer(
    elementFactory("br", { isVoidElement: true }),
  ),
} as const;

/**
 * Components that are allowed to be used remotely but should not be rendered on
 * the host.
 */
const skippedComponentsMap = {
  script: () => null,
} as const;

const flowComponentsMap = {
  "flr-form": createFlowRemoteComponentRenderer("Form", Form),
  "flr-slot-root-wrapper": createFlowRemoteComponentRenderer(
    "SlotRootWrapper",
    SlotRootWrapper,
  ),
  "flr-notification": createFlowRemoteComponentRenderer(
    "Notification",
    NotificationRenderController,
  ),
};

export const components = {
  ...htmlComponentsMap,
  ...skippedComponentsMap,
  ...autoGenerated,
  ...flowComponentsMap,
};
